------------------------------------------------------------------------------------------------------------------------------------------------
									     JENKINS
------------------------------------------------------------------------------------------------------------------------------------------------
=> Jenkins job types :- 
	1. Freestyle project - GUI (Project 1)
	2. Pipeline project - Script (Project 2)

=> What is Pipeline?
Pipeline is sequential execution of tasks
	Ex: Home --- Office (9.00 AM)
			- Before night (sleep early - 11.30 PM) ---- Wakeup (7.30 AM) ---- Freshup (7.55 AM) --- 					Breakfast (8.15 AM) ---- Reached Office (8.50 AM) ---- Cabin (9.00 AM)

=> How to write Jenkins Pipelines?
To write Jenkins pipelines we have to write Scripts.
Two types of scripts;
	1. Declarative 
	2. Groovy

=> "Jenkinsfile" --- Jenkinsfile consists of Pipeline script

=> How to write Jenkinsfile?
	P	- Pipeline
	A	- Agent
	S	- Stage(s)
	S	- Step(s)

pipeline {
    agent any

    stages {
        stage('Stage 1') {
            steps {
                echo 'This is Stage 1'
                echo "This is Demo Stage"
            }
        }
        stage('Stage 2') {
            steps {
                echo 'This is Stage 2'
            }
        }
        stage('Stage 3') {
            steps {
                echo 'This is Stage 3'
            }
        }
    }
}


Netflix Pipeline Project
========================================
========
Part 1
========
1. Launch a Amazon Linux 2 AMI, t2.micro - Connect to the instance using MobaXTerm Tool.
sudo yum update
sudo su

========
Part 2
========
JENKINS INSTALLATION ON LINUX EC2 INSTANCE
vi jenkins.sh ----> Paste the below commands in the file ---->
#STEP-1: Installing Git and Maven
yum install git maven -y

#STEP-2: Repo Information (jenkins.io --> download -- > redhat)
sudo wget -O /etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat-stable/jenkins.repo
sudo rpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io-2023.key

#STEP-3: Download Java 17 and Jenkins
sudo yum install java-17-amazon-corretto -y
sudo yum install jenkins -y

#STEP-4: Start and check the JENKINS Status
sudo systemctl start jenkins.service
sudo systemctl status jenkins.service

#STEP-5: Auto-Start Jenkins
sudo chkconfig jenkins on

----> esc ----> :wq ----> sh jenkins.sh ----> You will see jenkins is running ----> Access jenkins and setup jenkins

~ Check the jenkins accessibility. By default the Jenkins will run on Port No. 8080.
So, open Port No. 8080 for EC2 instance to access Jenkins
	"Check" the instance ----> Security ----> Click on the link under SGs ----> Add Rules ----> Custom TCP, 8080, Anwhere ----> Save Rules.

Open new tab: <Paste the Public IP of Instance>:8080 ----> You will see the Jenkins Home Page ----> Now we have to Unlock the Jenkins ----> You will see a code in the red colour ----> Copy the code in red colour ----> Go to MobaXTerm ----> sudo cat <paste the red color code> ----> You will see a password. Copy that password and paste in jenkins home page ----> Click on suggested plugins ----> You will see "Create First Admin User" ----> Enter Username, Password, Name, Email Id ----> Save and Continue ----> Jenkins URL:http://52.30.109.196:8080/  ----> Save and Finish ----> You will see "Jenkins is ready!" ----> Click on "Start using jenkins" ----> Now you can see the jenkins home page and here you can create Jenkins Jobs.

========
Part 3
========
TOMCAT WEBSERVER INSTALLATION ON LINUX EC2 INSTANCE

https://tomcat.apache.org/download-90.cgi ----> Downloads ----> Tomcat 9 ----> Copy the link of tar.gz file ----> https://dlcdn.apache.org/tomcat/tomcat-9/v9.0.73/bin/apache-tomcat-9.0.73.tar.gz ----> sudo wget https://dlcdn.apache.org/tomcat/tomcat-9/v9.0.73/bin/apache-tomcat-9.0.73.tar.gz ----> ls -l ----> You will the tomcat file in red colour. This is a tar.gz file and we have to extract the tar.gz file ----> tar -xvf <enter the name of tomcat file in red colour> ----> All the files will get extracted ----> ls -l  ----> You will see the list of extracted files  ---> cd <enter the name of tomcat file in blue colour>

Lets start the tomcat server:

Inorder to start the tomcat server, we need a file called "startup.sh"
This "startup.sh" file will be there in "bin" folder ----> cd bin ----> ls -l ----> you will see startup.sh file ----> ./startup.sh ----> You will see "Tomcat Started"

Lets access the tomcat server:
Since, the tomcat also runs on Port No. 8080, we cannot access tomcat as on the same port no. jenkins is also running.
Now, we have to change the Port No. of Tomcat. (Tomcat Port No. 9090)

How to change the port no. of Tomcat?
------------------------------------------------------
In order to change the port no. of Tomcat, we will configure a file known as "server.xml" This server.xml file will be available in "conf" folder. 

cd ..  ----> pwd ----> /home/ec2-user/apache-tomcat-9.0.73 ----> ls -l ----> cd conf ----> ls -l ----> you will see server.xml file ----> vi server.xml ---->  scroll down till you see "connector port=8080" ----> press "i" ----> Change the port no to 9090 instead of 8080 ----> escape ----> :wq

Check the Tomcat accessibility. By default the Tomcat will also run on Port No. 8080. But on the same port no. jenkins is also running.
So we have to add the port no. to 9090 in ec2 instance to access Tomcat:
	"Check" the instance ----> Security ----> Click on the link under SGs ----> Add Rules ----> Custom TCP, 9090, Anwhere ----> Save Rules.
Shutdown the tomcat server ----> cd bin ----> ./shutdown.sh  ----> ./startup.sh

Open new tab: <Paste the Public IP of Instance>:9090 ----> You will see the Tomcat Home Page
Go to browser and check for tomcat accessibility. You are now able to access Tomcat and Jenkins in the same instance.

Here we can access only the Home page of Tomcat. 
Inorder to access complete tomcat server, we need to do the configuration in "context.xml" file.
apache-tomcat-9.0.73/webapps/manager/META-INF/context.xml

cd apache-tomcat-9.0.73/webapps/manager/META-INF/context.xml ----> vi context.xml ----> You will see a "valve" tag. You have to edit "Allow" tag ----> ".*" />

Configuring the Users in Tomcat
---------------------------------------------
we need to edit the tomcat-users.xml to configure the users. 
The "tomcat-users.xml" file is available in "conf" folder. Paste the below script at the end of the file, just above "</tomcat-users>"

<role rolename="manager-gui" />
<user username="tomcat" password="tomcat" roles="manager-gui" />
<role rolename="admin-gui" />  
<user username="admin" password="admin" roles="manager-gui,admin-gui"/>

cd bin
./shutdown.sh
./startup.sh

Access Tomcat on Browser ----> Click on Server Status ----> Enter the username (admin) and password (admin)

Install git on VM
---------------------------------
Install GIT in EC2 Instance where Jenkins is running
	sudo yum install git -y

Jenkins Port No.: 8080
Tomcat Port No.: 9090

========
Part 4
========

Inorder to do the automation, Jenkins is going to execute some script to deploy the war file into the Tomcat Webserver.

___________________________________________________________
Step 1: Adding the manager-script role in tomcat-users.xml file
___________________________________________________________

In order to do the automation, Tomcat user should have a "manager-script" permission. There should be one user in the Tomcat with the "manager-script" permission. Then with that user credentials we can automate the deployment process.

Goto MobaXTerm and Connect to the Instance ----> ls -l ----> cd apache-tomcat-9.0.73 ----> ls -l ----> cd conf ----> ls -l ----> You can see tomcat-users.xml ----> vi tomcat-users.xml ----> Scroll down till you see "role rolename="manager-gui"", go to the last but-one line and type the below
<role rolename="manager-script" />
Goto the last line of "user username="admin"", and type "manager-script" at the last, just before inverted quotations ----> esc ----> :wq

________________________________________________________________________________________
Step 2: Installing "deploy to container" & "Pipeline: Stageview" plugins in Jenkins software
________________________________________________________________________________________

Jenkins Dashboard ----> Manage Jenkins ----> Plugins ----> Available Plugins ----> In the search bar, type 'deploy to container' and check the same ----> Click on "Install without restart" ----> Click on "Go back to the top page.


Step 3: Configure Maven in Jenkins
Jenkins Dashboard ----> Manage Jenkins ----> System Configuration ----> Tools ----> Scroll down to Maven ----> Add maven ----> Name: maven3, Version: 3.9.9 ----> Apply ----> Save
